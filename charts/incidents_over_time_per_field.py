import datetime
from charts.chart import Chart


class FieldOverTimeChart(Chart):

    def __init__(self, cummelative, field, field_name):
        self.cummelative = cummelative
        self.field = field
        self.field_name = field_name

    def show(self, data, show=True):
        start = datetime.datetime(2009, 3, 22)


        country_codes = [x[self.field] for x in data if not isinstance(x[self.field], list)]
        for array in [x[self.field] for x in data if isinstance(x[self.field], list)]:
            country_codes.extend(array)
        country_codes = set(country_codes)
        total = 0
        results = {x:[] for x in country_codes}
        labels = []
        tmp = {x:0 for x in country_codes}
        for i in data:
            while ((i[0]-start).days >= 1):
                labels.append(start)
                for country in country_codes:
                    results[country].append(tmp[country]*100.0/total)
                start += datetime.timedelta(days=1)
                if not self.cummelative:
                    tmp = {x:0 for x in country_codes}
                    total = 0
            if isinstance(i[self.field], list):
                for ii in i[self.field]:
                    tmp[ii] += 1
            else:
                tmp[i[self.field]] += 1
            total += 1

        percentages = sorted([sum(vs)/len(vs) for vs in results.values()])
        minper = percentages[-5] if len(percentages) > 10 else 0

        rest = [vs for k,vs in results.items() if sum(vs)/len(vs) < minper]
        results = {x:results[x] for x in results if sum(results[x])/len(results[x]) >= minper}
        rest = [sum([x[i] for x in rest]) for i in range(0, len(rest[0]))]
        if rest != []:
            results['OTHER'] = rest
        super()._show(
        'incidents_over_time_per_field_%i' % self.field,
        labels, 'Percentage incidents over time per %s' % self.field_name , results,
        show=show)
