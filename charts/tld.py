import requests, re
import matplotlib.pyplot as plt
from bs4 import BeautifulSoup
from charts.chart import Chart

class TLDChart(Chart):
    def get_tld_info(self):
        html_doc = requests.get('http://research.domaintools.com/statistics/tld-counts/', headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/69.0.3497.81 Chrome/69.0.3497.81 Safari/537.36'}).text
        soup = BeautifulSoup(html_doc, 'html.parser')

        rows = soup.find_all('tr')
        results = dict()

        for row in rows:
            try:
                tld = row['data-key']
                results[tld] = int(row.find_all('td')[-1].text.replace(',', ''))
            except:
                continue

        return results

    def show(self, data, show=True):
        print('TLD')
        domains = [x[1] for x in data]
        tlds = [x.split('/')[0].split('.')[-1] for x in domains]
        tld_totals = self.get_tld_info()
        results = {tld:(tlds.count(tld)*100/tld_totals[tld.lower()]) for tld in tlds if tld in tld_totals}

        results = {k: results[k] for k in sorted(results.keys(), key=lambda x: results[x])[-10:]}

        plt.bar(range(0,len(results)), results.values())
        plt.xlabel('TLD')
        plt.ylabel('% of malware domains')
        plt.title('% of malware domains weighted by TLD size')
        plt.xticks(range(0, len(results)), results.keys())
        if show:
            plt.show()
        else:
            plt.savefig('charts/results/tld.png')
        plt.close()
