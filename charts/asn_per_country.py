import requests, re, pyasn
import matplotlib.pyplot as plt
from bs4 import BeautifulSoup
from charts.chart import Chart
import math, time
import numpy as np
from numpy.polynomial.polynomial import polyfit
asndb = pyasn.pyasn('ipasn_db')
class ASNScatterChart(Chart):

    def asn_size(self, asn):
        return sum([2**(32-int(x.split('/')[-1])) for x in asndb.get_as_prefixes(int(asn))])

    def asn_country(self, asn):
        d = 'https://www.ultratools.com/tools/asnInfoResult?domainName=AS%s' % asn
        d = requests.get(d)
        soup = BeautifulSoup(d.text, 'html.parser')
        return soup.find_all('span', {"class": "value"})[0].text

    def show(self, data, show=True):
        print('ASN Scatter')

        asns = [x[-6] for x in data if x[-6] != '-' and x[-6] != '' and asndb.get_as_prefixes(x[-6])]
        results = {asn:asns.count(asn) for asn in asns}

        tmp = {}
        for k in results:
            country = self.asn_country(k)
            if (country not in tmp):
                tmp[country] = (0,0)
            tmp[country] = (tmp[country][0]+results[k], tmp[country][1]+self.asn_size(k))
        results = {k : tmp[k][0]*100.0/tmp[k][1] for k in tmp}

        results = {k: results[k] for k in sorted(results.keys(), key=lambda x: results[x])[-10:]}

        plt.bar(range(0,len(results)), results.values())
        plt.xlabel('ASN')
        plt.ylabel('% of malware domains')
        plt.title('% of malware domains weighted by ASN IP space')
        plt.xticks(range(0, len(results)), results.keys())
        if show:
            plt.show()
        else:
            plt.savefig('charts/results/asn_per_country.png')
        plt.close()
